<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cci.oms.login.repository.RoleMapper">
    <resultMap id="userResultMap" type="com.cci.oms.login.container.User">
        <id column="uid" property="id" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="BaseResultMap" type="com.cci.oms.login.container.Role">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="role_name" property="roleName" jdbcType="VARCHAR" />
        <result column="role_sign" property="roleSign" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
         <collection property="userRole" ofType="com.cci.oms.login.container.User" resultMap="userResultMap"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, role_name, role_sign, description
    </sql>
    
        <!-- 根据角色编号查询用户 -->
    
    <select id="selectUsersByRoleId" resultMap="userResultMap" parameterType="java.lang.String">
    select u.ID,u.username from t_mt_user_role r,t_mt_user u where r.MT_USER_ID=u.ID and r.MT_ROLE_ID= #{id,jdbcType=VARCHAR}
    
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cci.oms.login.container.RoleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_mt_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from t_mt_role
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_mt_role
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteUserRoleByPrimaryKey" parameterType="java.lang.String">
        delete from t_mt_user_role
        where mt_user_id = #{0,jdbcType=VARCHAR} and mt_role_id=#{1,jdbcType=VARCHAR}
    </delete>
    <delete id="deletePermissionRole" parameterType="java.lang.String">
        delete from t_mt_role_permission
        where mt_role_id = #{0,jdbcType=VARCHAR} and mt_per_id=#{1,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.cci.oms.login.container.RoleExample">
        delete from t_mt_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.cci.oms.login.container.Role">
        insert into t_mt_role (id, role_name, role_sign,
        description)
        values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleSign,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR})
    </insert> 
    <insert id="insertUserRole" parameterType="java.lang.String">
        insert into t_mt_user_role (id, mt_user_id, mt_role_id)
        values (#{0,jdbcType=VARCHAR}, #{1,jdbcType=VARCHAR}, #{2,jdbcType=VARCHAR})
    </insert>
    
    <insert id="insertPermissionRole" parameterType="java.lang.String">
        insert into t_mt_role_permission (id, mt_role_id,mt_per_id)
        values (#{0,jdbcType=VARCHAR}, #{1,jdbcType=VARCHAR}, #{2,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.cci.oms.login.container.Role">
        insert into t_mt_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleSign != null">
                role_sign,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.cci.oms.login.container.RoleExample" resultType="java.lang.Integer">
        select count(*) from t_mt_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_mt_role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.roleName != null">
                role_name = #{record.roleName,jdbcType=VARCHAR},
            </if>
            <if test="record.roleSign != null">
                role_sign = #{record.roleSign,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_mt_role
        set id = #{record.id,jdbcType=VARCHAR},
        role_name = #{record.roleName,jdbcType=VARCHAR},
        role_sign = #{record.roleSign,jdbcType=VARCHAR},
        description =
        #{record.description,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cci.oms.login.container.Role">
        update t_mt_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSign != null">
                role_sign = #{roleSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cci.oms.login.container.Role">
        update t_mt_role
        set role_name = #{roleName,jdbcType=VARCHAR},
        role_sign = #{roleSign,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT r.* FROM t_mt_role r LEFT JOIN t_mt_user_role ur ON r.id = ur.mt_role_id
        WHERE ur.mt_user_id = #{id,jdbcType=VARCHAR}
    </select>
</mapper>